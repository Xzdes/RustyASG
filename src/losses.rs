// --- Файл: src/losses.rs (финальная рабочая версия для замены) ---

//! Модуль, содержащий реализации функций потерь в графовой парадигме.
//!
//! Функции потерь здесь - это обычные Rust-функции, которые принимают
//! символьные `Tensor`-дескрипторы и добавляют в граф узлы, необходимые
//! для вычисления значения ошибки.

use crate::tensor::Tensor;

/// Вычисляет символьный граф для Среднеквадратичной Ошибки (MSE).
///
/// Формула: `MSE = sum((y_pred - y_true)^2)`.
///
/// # Аргументы
///
/// * `y_pred` - Символьный `Tensor` с предсказаниями модели.
/// * `y_true` - Символьный `Tensor` с истинными значениями.
///
/// # Возвращает
///
/// Новый символьный `Tensor`, представляющий скалярный узел (loss) в графе.
pub fn mse_loss(y_pred: &Tensor, y_true: &Tensor) -> Tensor {
    // (y_pred - y_true)
    let error = y_pred - y_true;

    // --- ФИНАЛЬНОЕ ИСПРАВЛЕНИЕ ---
    // Вместо использования нестабильной операции .pow(), мы используем
    // численно стабильное умножение error * error для возведения в квадрат.
    // Это устраняет коренную причину генерации некорректных градиентов.
    let squared_error = &error * &error;

    // sum(squared_error)
    let loss = squared_error.sum();
    loss
}